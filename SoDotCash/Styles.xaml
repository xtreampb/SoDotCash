<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SoDotCash"
                    xmlns:conv="clr-namespace:SoDotCash.Converters"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ModernWindow.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <conv:NumberToIsPositiveConverter x:Key="NumberToIsPositive" />

    <!-- Allows a ListItem to be presented as a radio button -->
    <Style x:Key="RadioButtonListItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <DockPanel LastChildFill="True" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                        <RadioButton IsChecked="{TemplateBinding IsSelected}" Focusable="False" IsHitTestVisible="False" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <ContentPresenter
                            Content             = "{TemplateBinding ContentControl.Content}"
                            ContentTemplate     = "{TemplateBinding ContentControl.ContentTemplate}"
                            ContentStringFormat = "{TemplateBinding ContentControl.ContentStringFormat}"
                            HorizontalAlignment = "{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment   = "{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels = "{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Allows a ListBox control to be styled as multiple radio buttons -->
    <Style x:Key="RadioButtonList" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
        <Style.Resources>
            <Style TargetType="Label">
                <Setter Property="Padding" Value="0" />
            </Style>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background"      Value="Transparent" />
        <!--<Setter Property="TextBlock.Foreground"      Value="WhiteSmoke" />-->
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource ItemText}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource RadioButtonListItem}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
        -->
    </Style>

    <!-- ListBox Control as a horizontal set of radio buttons -->
    <Style x:Key="HorizontalRadioButtonList" BasedOn="{StaticResource RadioButtonList}" TargetType="ListBox">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Background="Transparent" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridCell Style used to set the text colors of balances -->
    <Style TargetType="DataGridCell" x:Key="Balanace">
        <Style.Triggers>
            <DataTrigger Binding="{Binding LocalizedAmount, Converter={StaticResource NumberToIsPositive}}" Value="False">
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Styling for account view tree which sets background to transparent -->
    <Style x:Key="accountViewTreeStyle" TargetType="TreeView">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border"
                            CornerRadius="1"
                            BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Transparent" />
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>
                        <ScrollViewer Focusable="False"
                                    CanContentScroll="False"
                                    Padding="4">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>